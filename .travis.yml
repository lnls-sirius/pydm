sudo: required
language: python

env:
  global:
    - PYQT_VERSION=5
    - OFFICIAL_REPO="slaclab/pydm"
    - secure: "g7JqJMMB4LL0bM0h1rUN8bR2/CWt+jHLW+nknroyU6+kZc2oi6WLw7FSapCV23nJkyzoBZrvHokKBz/hml/lhp4wBuxWfm4E9h8qdyZgkA7OzWkJ2SxNvChi3mASLfvavkuIS/yCDxdhlcQsSNr3kdwkTRQuuKPqWuLzYLFHesCYOtWtRTn/9bzEPsvLp5/3ul+PY8ZsAdcdUEEJPgeW8P+JS960Jf4JsQ2QEl3ZOS3+l4SF7Z72yr0exmrWp8dt2rVuPXDLVHVos08Wx1tTL5Xwp8v33sAt9SHR40li+Q5KNHyA6ZC6Jgz7ZeDyxu39V7QvA55sF5+1J9UG0SrStmChbJ5lTeOx9wgxq6Ha8hrcsTaMPuk5eKcLvfZliSZ4lXxlSf8R/+HFrZNnS9DvrulWY/MVI4AdrON9RF9RDPGtfMyit8CKYOKp9XzKPDHeGFGZCfE9F0isLK/2YqIem63FwB1uFew6cFyRHIM1Ygtb7dzm/AE+dJhkY4iwR8jVnQF9qy7DwAAjbRohL40KvjcrZmn5rxH/VpPjxbifArEhtymYMgTGPfSgQAJO17yOcJdNKODZ/40qghlh0dv1loMxGPM73S9VLdsHqDQaaIptpQi2Z/y7pGVoiMPbZueQcSIkC04YKwJzKB1iCs2OQJ0g+kUdV4fFweMnUwa4umU="

matrix:
  include:
    - os: linux
      python: 2.7
      env: MC_URL="https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh"
    - os: linux
      python: 3.5
      env: MC_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
    - os: linux
      python: 3.6
      env: BUILD_DOCS=1 MC_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"

before_install:
  - sudo apt-get update
  - sudo apt-get install -y xvfb herbstluftwm
  # Make sure we have the tags no matter how far from them we are.
  - git pull --unshallow
  - wget $MC_URL -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes
  - conda install conda-build anaconda-client
  - conda update -q conda conda-build
  # Add the channels needed for install
  - conda config --append channels conda-forge
  # Build the recipe and use it the local build for install
  - conda build -q conda-recipe --python=$TRAVIS_PYTHON_VERSION --output-folder bld-dir
  - conda config --add channels "file://`pwd`/bld-dir"
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION pydm --file dev-requirements.txt
  - source activate test-environment

install:
  - "export DISPLAY=:99.0"
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX +render -noreset"
  - sleep 3

before_script:
  - "herbstluftwm &"
  - sleep 1

script:
  - python run_tests.py --show-cov
  #Build docs
  - set -e
  - |
    if [[ -n "$DOCTR_DEPLOY_ENCRYPTION_KEY" && $BUILD_DOCS ]]; then
      pip install -r docs-requirements.txt
      pushd docs
      make html
      popd
      #Publish docs.
      doctr deploy . --built-docs docs/build/html --deploy-branch-name gh-pages
    fi

after_success:
  - codecov
  - |
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == $OFFICIAL_REPO && $TRAVIS_BRANCH == $TRAVIS_TAG  && $TRAVIS_TAG != '' && $CONDA_UPLOAD_TOKEN_TAG != '' ]]; then
      export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN_TAG  
      anaconda upload bld-dir/linux-64/*.tar.bz2
    fi
  - |
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == $OFFICIAL_REPO && $TRAVIS_BRANCH == 'master' && $TRAVIS_TAG == '' && $CONDA_UPLOAD_TOKEN_DEV != '' ]]; then
      export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN_DEV  
      anaconda upload bld-dir/linux-64/*.tar.bz2
    fi
